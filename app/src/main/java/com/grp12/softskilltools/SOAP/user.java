package com.grp12.softskilltools.SOAP;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/13/2017 3:12:55 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.grp12.softskilltools.SOAP.safe;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class user implements KvmSerializable {
    
    public boolean administrativ;
    public String email;
    public boolean inverter;
    public boolean notifikationer;
    public String retning;
    public safe safe;
    
    public user(){}
    
    public user(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("administrativ"))
        {
            Object obj = soapObject.getProperty("administrativ");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                administrativ = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                administrativ = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("email"))
        {
            Object obj = soapObject.getProperty("email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("inverter"))
        {
            Object obj = soapObject.getProperty("inverter");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inverter = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                inverter = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("notifikationer"))
        {
            Object obj = soapObject.getProperty("notifikationer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                notifikationer = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                notifikationer = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("retning"))
        {
            Object obj = soapObject.getProperty("retning");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                retning = j.toString();
            }else if (obj!= null && obj instanceof String){
                retning = (String) obj;
            }
        }
        if (soapObject.hasProperty("safe"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("safe");
            safe =  new safe (j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return administrativ;
            case 1:
                return email;
            case 2:
                return inverter;
            case 3:
                return notifikationer;
            case 4:
                return retning;
            case 5:
                return safe;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "administrativ";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "email";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "inverter";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "notifikationer";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "retning";
                break;
            case 5:
                info.type = safe.class;
                info.name = "safe";
                break;
        }
    }
    

    public String getInnerText() {
        return null;
    }
    
    

    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
